apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.artifactory'

group = 'com.nedap.jersey'
version = '1.0.0'
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

configurations {
    provided {
        dependencies.all { dep ->
            configurations.default.exclude group: dep.group, module: dep.name
        }
    }
    compile.extendsFrom provided
}

ext {
  depVersions = [
      jersey: '1.17.1',
      slf4j: '1.7.5',
      jetty: '9.0.5.v20130815',
      guice: '3.0',
      newrelic: '3.14.0'
  ]
}

buildscript {
  repositories {
    jcenter()
  }

  dependencies {
    classpath "org.jfrog.buildinfo:build-info-extractor-gradle:3.0.1"
  }
}

dependencies {
  compile "com.newrelic.agent.java:newrelic-api:$depVersions.newrelic"
  compile "org.slf4j:slf4j-api:$depVersions.slf4j"

  provided "com.sun.jersey:jersey-core:$depVersions.jersey"
  provided "com.sun.jersey:jersey-server:$depVersions.jersey"

  provided 'com.google.code.findbugs:jsr305:2.0.1'

  // use jetty's servlet-api package
  provided 'org.eclipse.jetty.orbit:javax.servlet:3.0.0.v201112011016'

  testRuntime "org.slf4j:slf4j-simple:$depVersions.slf4j"
  testRuntime "org.slf4j:log4j-over-slf4j:$depVersions.slf4j"
  testRuntime "org.slf4j:jcl-over-slf4j:$depVersions.slf4j"
  testCompile "org.slf4j:jul-to-slf4j:$depVersions.slf4j"

  testCompile 'junit:junit:4.11'

  testCompile "org.eclipse.jetty:jetty-servlet:$depVersions.jetty"
  testCompile "com.sun.jersey.contribs:jersey-guice:$depVersions.jersey"
  testCompile "com.sun.jersey:jersey-servlet:$depVersions.jersey"

  testCompile 'com.ning:async-http-client:1.7.19'
}

repositories {
  mavenCentral()
  mavenLocal()
}

task sourcesJar(type: Jar, dependsOn: classes) {
  from sourceSets.main.allJava
  classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  from javadoc.destinationDir
  classifier = 'javadoc'
}

artifacts {
  // register in 'archives' config so they will be signed
  archives sourcesJar
  archives javadocJar
}

signing {
  required { gradle.taskGraph.hasTask("uploadArchives") }
  sign configurations.archives
}

// Set sonatypeUsername and sonatypePassword in your ~/.gradle/gradle.properties to be able to use this.
artifactory {
  resolve {
    contextUrl = "https://nedap.artifactoryonline.com/nedap"
    repository {
      repoKey = "libs-nedap-local"
      username = artifactoryUser
      password = artifactoryPassword
      maven = true
    }
  }

  publish {
    contextUrl = "https://nedap.artifactoryonline.com/nedap"
    repository {
      repoKey = version.endsWith("SNAPSHOT") ? "libs-snapshots-local" : "libs-releases-local"
      username = artifactoryUser
      password = artifactoryPassword
    }

    defaults {
      publishBuildInfo = true
      publishArtifacts = true
      publications "mavenJava"
    }
  }
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java

      artifact sourcesJar {
        classifier "sources"
      }

      artifact javadocJar {
        classifier "javadoc"
      }
    }
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '2.2.1'
}
